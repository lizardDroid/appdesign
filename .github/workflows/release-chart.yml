name: Release Helm Chart

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Override chart version (must match Chart.yaml if set)"
        required: false
        type: string
      create_release:
        description: "Create GitHub Release and upload chart package"
        required: true
        default: true
        type: boolean
      push_oci:
        description: "Also push chart to GHCR as OCI (ghcr.io/<owner>/charts)"
        required: true
        default: false
        type: boolean

permissions:
  contents: write   # for creating releases
  packages: write   # for pushing to GHCR

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      OWNER: ${{ github.repository_owner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.14.4

      - name: Determine chart metadata
        id: meta
        run: |
          set -euo pipefail
          CHART_DIR="deployments/httpbin"
          NAME=$(grep '^name:' "$CHART_DIR/Chart.yaml" | awk '{print $2}')
          VERSION=$(grep '^version:' "$CHART_DIR/Chart.yaml" | awk '{print $2}')
          if [ -n "${{ github.event.inputs.version }}" ]; then
            if [ "${{ github.event.inputs.version }}" != "$VERSION" ]; then
              echo "Provided version (${{ github.event.inputs.version }}) does not match Chart.yaml ($VERSION)" >&2
              exit 1
            fi
          fi
          echo "name=$NAME" >> $GITHUB_OUTPUT
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Package chart
        run: |
          set -euo pipefail
          mkdir -p dist
          helm dependency update deployments/httpbin || true
          helm package deployments/httpbin -d dist
          ls -l dist

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-${{ steps.meta.outputs.name }}-${{ steps.meta.outputs.version }}
          path: dist/*.tgz

      - name: Create GitHub Release
        if: inputs.create_release == true
        uses: softprops/action-gh-release@v2
        with:
          tag_name: chart-${{ steps.meta.outputs.name }}-v${{ steps.meta.outputs.version }}
          name: Chart ${{ steps.meta.outputs.name }} v${{ steps.meta.outputs.version }}
          body: |
            Release of Helm chart ${{ steps.meta.outputs.name }} version ${{ steps.meta.outputs.version }}.
          files: |
            dist/*.tgz

      - name: Login to GHCR (OCI)
        if: inputs.push_oci == true
        run: |
          set -euo pipefail
          helm registry login ghcr.io -u "${{ github.actor }}" -p "${{ secrets.GITHUB_TOKEN }}"

      - name: Push chart to GHCR (OCI)
        if: inputs.push_oci == true
        run: |
          set -euo pipefail
          helm push dist/${{ steps.meta.outputs.name }}-${{ steps.meta.outputs.version }}.tgz oci://ghcr.io/${{ env.OWNER }}/charts


